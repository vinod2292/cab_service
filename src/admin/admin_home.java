package admin;


import java.sql.*;
import java.text.DateFormat;
import java.util.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vinod
 */
public class admin_home extends javax.swing.JFrame {
    Vertex[] vert;
    
    /**
     * Creates new form admin_home
     */
    public admin_home(boolean a) {
        initComponents();
        update_lst();
        update_capacity();
        update_graph();
        if(!a){
            jTabbedPane1.remove(jPanel1);
            jTabbedPane1.remove(jPanel2);
            jTabbedPane1.remove(jPanel4);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        reg_no_txt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        no_plate_txt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ac_opt = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        type_lst = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        name_txt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        capacity_txt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        avg_speed_txt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        city_name_txt = new javax.swing.JTextField();
        add_city_cmd = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        landm_txt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cities_lst = new javax.swing.JComboBox();
        add_land_cmd = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        from_cities_lst = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        to_cities_lst = new javax.swing.JComboBox();
        one_way_chk = new javax.swing.JCheckBox();
        cl_cmd = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        dist_spn = new javax.swing.JSpinner();
        from_landm_lst = new javax.swing.JComboBox();
        to_landm_lst = new javax.swing.JComboBox();
        dl_cities_lst = new javax.swing.JComboBox();
        dlt_city_cmd = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        dl_cmd = new javax.swing.JButton();
        del_to_landm_lst = new javax.swing.JComboBox();
        del_from_landm_lst = new javax.swing.JComboBox();
        del_from_cities_lst = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        del_cities_lst = new javax.swing.JComboBox();
        del_landm_lst = new javax.swing.JComboBox();
        dl_cmd1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        book_from_city_lst = new javax.swing.JComboBox();
        book_from_lm_lst = new javax.swing.JComboBox();
        book_to_city_lst = new javax.swing.JComboBox();
        book_to_lm_lst = new javax.swing.JComboBox();
        book_ac_opt = new javax.swing.JRadioButton();
        book_nonac_opt = new javax.swing.JRadioButton();
        jLabel21 = new javax.swing.JLabel();
        type_book_lst = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        capacity_lst = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        customer_name_txt = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        mobile_no_txt = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        email_txt = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        address_txt = new javax.swing.JTextArea();
        book_cab_cmd = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        dep_time_spn = new javax.swing.JSpinner();
        jLabel29 = new javax.swing.JLabel();
        ret_time_spn = new javax.swing.JSpinner();
        round_chk = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        bid_txt = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        admin_chk = new javax.swing.JCheckBox();
        usr_name_txt = new javax.swing.JTextField();
        usr_un_txt = new javax.swing.JTextField();
        usr_pass_txt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTabbedPane1.setName("");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Registration No :");

        jLabel2.setFont(new java.awt.Font("Segoe Script", 1, 18)); // NOI18N
        jLabel2.setText("Vehical Information");

        reg_no_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reg_no_txtActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("No Plate :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Air Conditioner :");

        ac_opt.setSelected(true);
        ac_opt.setText("AC");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Capacity:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Type Of Vehical :");

        type_lst.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Car", "Bus", "Auto Riksha" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Driver Name :");

        jButton1.setText("Add Cab");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Avg Speed :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(reg_no_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(no_plate_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ac_opt)
                            .addComponent(type_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(capacity_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(avg_speed_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(jButton1)))
                .addContainerGap(241, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(reg_no_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(no_plate_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ac_opt))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(capacity_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(type_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(avg_speed_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addComponent(jButton1)
                .addContainerGap(238, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Vehicle", jPanel1);

        jPanel2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel2FocusGained(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe Script", 0, 18)); // NOI18N
        jLabel9.setText("City Profile");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("City Name :");

        add_city_cmd.setText("Add City");
        add_city_cmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_city_cmdActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Lanmark Name :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("City :");

        add_land_cmd.setText("Add Landmark");
        add_land_cmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_land_cmdActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe Script", 0, 16)); // NOI18N
        jLabel13.setText("Connect Landmarks");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("From :");

        from_cities_lst.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                from_cities_lstItemStateChanged(evt);
            }
        });
        from_cities_lst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                from_cities_lstActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("To :");

        to_cities_lst.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                to_cities_lstItemStateChanged(evt);
            }
        });

        one_way_chk.setText("One Way");

        cl_cmd.setText("Connect Landmarks");
        cl_cmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cl_cmdActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Distance :");

        dl_cities_lst.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dl_cities_lstItemStateChanged(evt);
            }
        });
        dl_cities_lst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dl_cities_lstActionPerformed(evt);
            }
        });

        dlt_city_cmd.setText("Delete City");
        dlt_city_cmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlt_city_cmdActionPerformed(evt);
            }
        });

        jLabel20.setText("Km");

        dl_cmd.setText("Delete Road");
        dl_cmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dl_cmdActionPerformed(evt);
            }
        });

        del_from_landm_lst.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                del_from_landm_lstItemStateChanged(evt);
            }
        });

        del_from_cities_lst.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                del_from_cities_lstItemStateChanged(evt);
            }
        });
        del_from_cities_lst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_from_cities_lstActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setText("From :");

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setText("To :");

        del_cities_lst.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                del_cities_lstItemStateChanged(evt);
            }
        });
        del_cities_lst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_cities_lstActionPerformed(evt);
            }
        });

        del_landm_lst.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                del_landm_lstItemStateChanged(evt);
            }
        });

        dl_cmd1.setText("Delete Landmark");
        dl_cmd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dl_cmd1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jLabel9))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addGap(55, 55, 55)
                            .addComponent(jLabel10)
                            .addGap(34, 34, 34)
                            .addComponent(city_name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dl_cities_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(161, 161, 161)
                            .addComponent(add_city_cmd)
                            .addGap(145, 145, 145)
                            .addComponent(dlt_city_cmd)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addComponent(jLabel14)
                                                .addGap(18, 18, 18)
                                                .addComponent(from_cities_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(37, 37, 37)
                                                .addComponent(jLabel15)
                                                .addGap(18, 18, 18)
                                                .addComponent(to_cities_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(32, 32, 32)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(from_landm_lst, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(to_landm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cl_cmd)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(dist_spn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel20)
                                                .addGap(23, 23, 23)
                                                .addComponent(one_way_chk)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(dl_cmd)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(16, 16, 16)
                                                .addComponent(jLabel31)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(del_to_landm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(56, 56, 56))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel30)
                                        .addGap(18, 18, 18)
                                        .addComponent(del_from_cities_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(del_from_landm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(34, 34, 34)
                                .addComponent(landm_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addComponent(jLabel12)
                                        .addGap(34, 34, 34)
                                        .addComponent(cities_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(65, 65, 65)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel13)
                                            .addComponent(add_land_cmd))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(del_cities_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(del_landm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(dl_cmd1)
                                        .addGap(99, 99, 99)))))))
                .addContainerGap(36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel9)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(city_name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dl_cities_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(add_city_cmd)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(landm_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(cities_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(add_land_cmd)
                        .addGap(57, 57, 57)
                        .addComponent(jLabel13))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(dlt_city_cmd)
                        .addGap(44, 44, 44)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(del_cities_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(del_landm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(dl_cmd1)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(from_cities_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(from_landm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(to_cities_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(to_landm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(one_way_chk)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(dist_spn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel20)))))
                        .addGap(18, 18, 18)
                        .addComponent(cl_cmd))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(del_from_cities_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(del_from_landm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31)
                            .addComponent(del_to_landm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(dl_cmd)))
                .addContainerGap(155, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Modify Map", jPanel2);

        jLabel17.setFont(new java.awt.Font("Segoe Script", 0, 18)); // NOI18N
        jLabel17.setText("Book Cabs");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("From :");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("To :");

        book_from_city_lst.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                book_from_city_lstItemStateChanged(evt);
            }
        });

        book_to_city_lst.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                book_to_city_lstItemStateChanged(evt);
            }
        });

        book_ac_opt.setSelected(true);
        book_ac_opt.setText("AC");

        book_nonac_opt.setText("Non AC");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Type Of Vehical :");

        type_book_lst.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Car", "Bus", "Auto Riksha" }));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Capacity :");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Customer Details");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Name :");

        customer_name_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_name_txtActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("Mobile No :");

        mobile_no_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobile_no_txtActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("Email :");

        email_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                email_txtActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText("Address :");

        address_txt.setColumns(20);
        address_txt.setRows(5);
        jScrollPane1.setViewportView(address_txt);

        book_cab_cmd.setText("Book Cab");
        book_cab_cmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                book_cab_cmdActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Departure :");

        dep_time_spn.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.MINUTE));

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("Return :");

        ret_time_spn.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1357732398849L), null, null, java.util.Calendar.MINUTE));
        ret_time_spn.setEnabled(false);

        round_chk.setText("Round Trip");
        round_chk.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                round_chkItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(jLabel17))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dep_time_spn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(ret_time_spn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(round_chk))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                            .addComponent(book_from_city_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(54, 54, 54)
                                            .addComponent(book_from_lm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                            .addComponent(book_to_city_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(book_to_lm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(capacity_lst, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(type_book_lst, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(book_ac_opt)
                                .addGap(18, 18, 18)
                                .addComponent(book_nonac_opt))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customer_name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mobile_no_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(email_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(book_cab_cmd))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jLabel23)))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(book_from_city_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(book_from_lm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(book_to_city_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(book_to_lm_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(book_ac_opt)
                    .addComponent(book_nonac_opt))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(type_book_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(capacity_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(dep_time_spn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(ret_time_spn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(round_chk))
                .addGap(20, 20, 20)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(customer_name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(mobile_no_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(email_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(book_cab_cmd)
                .addGap(64, 64, 64))
        );

        jTabbedPane1.addTab("Book Cab", jPanel5);

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel35.setText("Booking id :");

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel36.setText("or");

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel37.setText("Email id :");

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel38.setText(":");

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel39.setText(":");

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setText(":");

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel41.setText(":");

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel42.setText(":");

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel43.setText(":");

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel44.setText(":");

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel45.setText(":");

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel46.setText(":");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(jButton3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel37)
                            .addGap(30, 30, 30)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(181, 181, 181)
                                .addComponent(jLabel35)
                                .addGap(30, 30, 30)
                                .addComponent(bid_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(273, 273, 273)
                                .addComponent(jLabel36)))))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(bid_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel36)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(58, 58, 58)
                .addComponent(jLabel38)
                .addGap(18, 18, 18)
                .addComponent(jLabel39)
                .addGap(18, 18, 18)
                .addComponent(jLabel40)
                .addGap(18, 18, 18)
                .addComponent(jLabel41)
                .addGap(18, 18, 18)
                .addComponent(jLabel42)
                .addGap(18, 18, 18)
                .addComponent(jLabel43)
                .addGap(18, 18, 18)
                .addComponent(jLabel44)
                .addGap(18, 18, 18)
                .addComponent(jLabel45)
                .addGap(18, 18, 18)
                .addComponent(jLabel46)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Booking status", jPanel3);

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setText("Name :");

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setText("username :");

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setText("password :");

        admin_chk.setText("admin");

        usr_name_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usr_name_txtActionPerformed(evt);
            }
        });

        usr_un_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usr_un_txtActionPerformed(evt);
            }
        });

        usr_pass_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usr_pass_txtActionPerformed(evt);
            }
        });

        jButton2.setText("Add user");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel34)
                            .addComponent(jLabel33)
                            .addComponent(jLabel32))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(admin_chk)
                            .addComponent(usr_name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usr_un_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usr_pass_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(jButton2)))
                .addContainerGap(303, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(usr_name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(usr_un_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(usr_pass_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(admin_chk)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(414, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add User", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel2FocusGained
        
    }//GEN-LAST:event_jPanel2FocusGained

    private void cl_cmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cl_cmdActionPerformed
        String to = to_cities_lst.getSelectedItem().toString();
        Connection con;
        PreparedStatement pst;
        int rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service", "root", "iitj_123");
            pst = con.prepareStatement("INSERT INTO `cab_service`.`map_roads` ( `from_node`, `to_node`, `distance`) VALUES ( ?, ?, ?);");
            String frm = from_landm_lst.getSelectedItem().toString();
            String [] arr = frm.split(" ", 2);
            pst.setString(1, arr[0]);
            frm = to_landm_lst.getSelectedItem().toString();
            arr = frm.split(" ", 2);
            pst.setString(2, arr[0]);
            pst.setString(3, dist_spn.getValue().toString());

            rs = pst.executeUpdate();
            if(!one_way_chk.isSelected()){
            pst = con.prepareStatement("INSERT INTO `cab_service`.`map_roads` ( `from_node`, `to_node`, `distance`) VALUES ( ?, ?, ?);");
            frm = to_landm_lst.getSelectedItem().toString();
            arr = frm.split(" ", 2);
            pst.setString(1, arr[0]);
            frm = from_landm_lst.getSelectedItem().toString();
            arr = frm.split(" ", 2);
            pst.setString(2, arr[0]);
            pst.setString(3, dist_spn.getValue().toString());

                rs = pst.executeUpdate();
            }
            if (rs == 1) {
                JOptionPane.showMessageDialog(null, "Road added!", "Success!!", JOptionPane.OK_OPTION);
                dist_spn.setValue("0");
            }
            con.close();

        } catch (Exception e) {
            System.out.println(e);
        }
        update_graph();
    }//GEN-LAST:event_cl_cmdActionPerformed

    private void add_land_cmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_land_cmdActionPerformed
        String city = landm_txt.getText();
        Connection con;
        PreparedStatement pst;
        int rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service", "root", "iitj_123");
            pst = con.prepareStatement("INSERT INTO `cab_service`.`map_nodes` (`node_name`, `city`) VALUES ( ?, (select city_id from `cab_service`.`cities` where city =?))");
            pst.setString(1, city);
            pst.setString(2, cities_lst.getSelectedItem().toString());

            rs = pst.executeUpdate();
            if (rs == 1) {
                JOptionPane.showMessageDialog(null, "Landmark added!", "Success!!", JOptionPane.OK_OPTION);
                landm_txt.setText("");
            }
            con.close();

        } catch (Exception e) {
            System.out.println(e);
            e.printStackTrace();
        }
        update_graph();
    }//GEN-LAST:event_add_land_cmdActionPerformed

    private void add_city_cmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_city_cmdActionPerformed
        String city = city_name_txt.getText();
        Connection con;
        PreparedStatement pst;
        int rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service", "root", "iitj_123");
            pst = con.prepareStatement("INSERT INTO `cab_service`.`cities` (`city`) VALUES (?)");
            pst.setString(1, city);

            rs = pst.executeUpdate();
            if (rs == 1) {
                JOptionPane.showMessageDialog(null, "City added!", "Success!!", JOptionPane.OK_OPTION);
                city_name_txt.setText("");
                update_lst();
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_add_city_cmdActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String ac;
        String cb = reg_no_txt.getText();
        String np = no_plate_txt.getText();
        if (ac_opt.isSelected()) {
            ac = "1";
        } else {
            ac = "0";
        }
        String capacity = capacity_txt.getText();
        String tov = type_lst.getSelectedItem().toString();
        String dname = name_txt.getText();
        String avgs = avg_speed_txt.getText();
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        int rs1;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service", "root", "iitj_123");
            pst = con.prepareStatement("INSERT INTO `cab_service`.`cabs` (`Reg_no`, `no_plate`, `driver_name`, `capacity`, `AC`, `avg_speed`, `type`) VALUES (?, ?, ?, ?, ?, ?, ?)");
            pst.setString(1, cb);
            pst.setString(2, np);
            pst.setString(3, dname);
            pst.setString(4, capacity);
            pst.setString(5, ac);
            pst.setString(6, avgs);
            pst.setString(7, tov);
            rs1 = pst.executeUpdate();
            pst = con.prepareStatement("SELECT LAST_INSERT_ID()");
            rs = pst.executeQuery();
            pst = con.prepareStatement("INSERT INTO `cab_service`.`cab_booking` (`from`, `to`, `start_time`, `end_time`, `distance`, `cab_id`, `customer_name`, `mobile`, `email`, `address`) VALUES (10, 10, CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP(), 0, ?, 'us', '0', 'null', 'null')");
            rs.next();
            pst.setString(1, rs.getString("LAST_INSERT_ID()"));
            rs1 = pst.executeUpdate();
            if (rs1 == 1) {
                JOptionPane.showMessageDialog(null, "Cab added!", "Success!!", JOptionPane.OK_OPTION);
            }
            con.close();
            update_capacity();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void reg_no_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reg_no_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reg_no_txtActionPerformed

    private void from_cities_lstItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_from_cities_lstItemStateChanged
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service","root","iitj_123");
            pst=con.prepareStatement("select * from map_nodes where city =(select city_id from cities where city =?)");
            pst.setString(1, from_cities_lst.getSelectedItem().toString());
            rs=pst.executeQuery();
            String item;
            from_landm_lst.removeAllItems();
            while(rs.next())
            {
                item = rs.getString("node_no") + " " + rs.getString("node_name");
                from_landm_lst.addItem(item);
            }
            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_from_cities_lstItemStateChanged

    private void from_cities_lstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_from_cities_lstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_from_cities_lstActionPerformed

    private void to_cities_lstItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_to_cities_lstItemStateChanged
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service","root","iitj_123");
            pst=con.prepareStatement("select * from map_nodes where city =(select city_id from cities where city =?)");
            pst.setString(1, to_cities_lst.getSelectedItem().toString());
            rs=pst.executeQuery();
            String item;
            to_landm_lst.removeAllItems();
            while(rs.next())
            {
                item = rs.getString("node_no") + " " + rs.getString("node_name");
                to_landm_lst.addItem(item);
            }
            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_to_cities_lstItemStateChanged

    private void customer_name_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_name_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_name_txtActionPerformed

    private void mobile_no_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobile_no_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobile_no_txtActionPerformed

    private void email_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_email_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_email_txtActionPerformed

    private void book_from_city_lstItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_book_from_city_lstItemStateChanged
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service","root","iitj_123");
            pst=con.prepareStatement("select * from map_nodes where city =(select city_id from cities where city =?)");
            pst.setString(1, book_from_city_lst.getSelectedItem().toString());
            rs=pst.executeQuery();
            String item;
            book_from_lm_lst.removeAllItems();
            while(rs.next())
            {
                item = rs.getString("node_no") + " " + rs.getString("node_name");
                book_from_lm_lst.addItem(item);
            }
            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_book_from_city_lstItemStateChanged

    private void book_to_city_lstItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_book_to_city_lstItemStateChanged
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service","root","iitj_123");
            pst=con.prepareStatement("select * from map_nodes where city =(select city_id from cities where city =?)");
            pst.setString(1, book_to_city_lst.getSelectedItem().toString());
            rs=pst.executeQuery();
            String item;
            book_to_lm_lst.removeAllItems();
            while(rs.next())
            {
                item = rs.getString("node_no") + " " + rs.getString("node_name");
                book_to_lm_lst.addItem(item);
            }
            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_book_to_city_lstItemStateChanged

    private void book_cab_cmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_book_cab_cmdActionPerformed
        Connection con;
        PreparedStatement pst;
        ResultSet rs,rs1;
        String ac="0";
        if(book_ac_opt.isSelected())
            ac="1";
        
        String frm = book_from_lm_lst.getSelectedItem().toString();
        String [] arr = frm.split(" ", 2);
        int frm_vert = Integer.parseInt(arr[0]);
        frm = book_to_lm_lst.getSelectedItem().toString();
        arr = frm.split(" ", 2);
        int to_vert = Integer.parseInt(arr[0]);
        Djikstra.computePaths(vert[frm_vert]);
        double dst = vert[to_vert].minDistance;
        String st_date = dep_time_spn.getValue().toString();
        String rt_date = ret_time_spn.getValue().toString();
        arr = st_date.split(" ", 2);
        String [] arr2 = rt_date.split(" ", 2);
        DateFormat readFormat = new SimpleDateFormat( "MMM dd hh:mm:ss zzz yyyy");
        DateFormat writeFormat = new SimpleDateFormat( "yyyy-MM-dd HH:mm:ss");
        Date stdate = null;
        Date rtdate = null;
        try
        {
            stdate = readFormat.parse( arr[1] );
            rtdate = readFormat.parse( arr2[1] );
        }
        catch ( ParseException e )
        {
                e.printStackTrace();
        }
        String stdatef = "", rtdatef = "";
        if( stdate != null )
        {
            stdatef = writeFormat.format( stdate );
            System.out.println("Date : " + stdatef);
        }
        if( rtdate != null )
        {
            rtdatef = writeFormat.format( rtdate );
            System.out.println("Date : " + rtdatef);
        }
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service","root","iitj_123");
            pst=con.prepareStatement("select * from cabs where AC =? and capacity =?");
            pst.setString(1, ac);
            pst.setString(2, capacity_lst.getSelectedItem().toString());
            System.out.println(pst);
            rs=pst.executeQuery();
            String item;
            if(!rs.next())
                JOptionPane.showMessageDialog(null, "No Cab of your Specification is available!", "Success!!", JOptionPane.OK_OPTION);
            double temp1 = Double.MAX_VALUE, temp2 = Double.MAX_VALUE;
            int sel_cab_node,temp=0;
            rs.beforeFirst();
            String sel_cab = null;
            while(rs.next())
            {
                item = rs.getString("avg_speed");
                temp = Integer.parseInt(item);
                item = rs.getString("cab_no");
                pst=con.prepareStatement("select * from cab_booking where cab_id =? AND (TIMEDIFF(?, end_time) < 0 OR (TIMEDIFF(start_time, ?) < ? and TIMEDIFF(start_time, ?) > 0))");
                pst.setString(1, item);
                pst.setString(2, stdatef);
                pst.setString(3, stdatef);
                pst.setString(4, ""+((int)dst/temp)+":"+(int)(((dst/temp)%1)*30/5));
                pst.setString(5, stdatef);
                System.out.println(pst);
                rs1=pst.executeQuery();
                if(!rs1.next()){
                    pst=con.prepareStatement("select *, MIN(TIMEDIFF(?, end_time)) from cab_booking where cab_id =? AND TIMEDIFF(?, end_time) > 0 GROUP BY cab_id");
                    pst.setString(1, stdatef);
                    pst.setString(2, item);
                    pst.setString(3, stdatef);
                    System.out.println(pst);
                    rs1=pst.executeQuery();
                    rs1.next();
                    temp1 = vert[Integer.parseInt(rs1.getString("to"))].minDistance;
                    System.out.println(temp1);
                    if(temp1<temp2){
                        temp2=temp1;
                        sel_cab = item;
                        if(rs1.next())
                            sel_cab_node = Integer.parseInt(rs1.getString("to"));
                        else
                            sel_cab_node = 1;
                    }
                }
            }
            if(sel_cab==null)
                JOptionPane.showMessageDialog(null, "No Cab of your Specification at given time is available!", "Success!!", JOptionPane.OK_OPTION);
            else{
                pst=con.prepareStatement("INSERT INTO `cab_service`.`cab_booking` (`from`, `to`, `start_time`, `end_time`, `distance`, `cab_id`, `customer_name`, `mobile`, `email`, `address`) VALUES (?, ?, ?, ADDTIME (?, ?), ?, ?, ?, ?, ?, ?)");
                pst.setString(1, ""+frm_vert);
                pst.setString(2, ""+to_vert);
                pst.setString(3, stdatef);
                pst.setString(4, stdatef);
                pst.setString(5, ""+((int)dst/temp)+":"+(int)(((dst/temp)%1)*30/5));
                pst.setString(6, ""+dst);
                pst.setString(7, sel_cab);
                pst.setString(8, customer_name_txt.getText());
                pst.setString(9, mobile_no_txt.getText());
                pst.setString(10, email_txt.getText());
                pst.setString(11, address_txt.getText());
                System.out.println(pst);
                int bk=pst.executeUpdate();
                pst = con.prepareStatement("SELECT LAST_INSERT_ID()");
                rs = pst.executeQuery();
                rs.next();
                List<Vertex> path = Djikstra.getShortestPathTo(vert[to_vert]);
                System.out.println("Path: " + path);
                if(bk==1)
                    JOptionPane.showMessageDialog(null, "Your cab has been booked! Your Booking id is" + rs.getString("LAST_INSERT_ID()") + " path taken will be" + path + "Total fare Rs" + (dst*8), "Success!!", JOptionPane.OK_OPTION);
            }
            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_book_cab_cmdActionPerformed

    private void round_chkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_round_chkItemStateChanged
        if(round_chk.isSelected())
            ret_time_spn.setEnabled(true);
        else
            ret_time_spn.setEnabled(false);
    }//GEN-LAST:event_round_chkItemStateChanged

    private void dl_cities_lstItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dl_cities_lstItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_dl_cities_lstItemStateChanged

    private void dl_cities_lstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dl_cities_lstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dl_cities_lstActionPerformed

    private void dlt_city_cmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlt_city_cmdActionPerformed
        String city = dl_cities_lst.getSelectedItem().toString();
        Connection con;
        PreparedStatement pst;
        int rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service", "root", "iitj_123");
            pst = con.prepareStatement("DELETE FROM `cab_service`.`map_roads` WHERE from_node in (select node_no from (select node_no from `cab_service`.`map_nodes` where city =(select city_id from `cab_service`.`cities` where city =?) group by node_no having count(*) > 1) t);");
            pst.setString(1, city);
            System.out.println(pst);
            rs = pst.executeUpdate();
            pst = con.prepareStatement("DELETE FROM `cab_service`.`map_nodes` WHERE `city`=(select city_id from `cab_service`.`cities` where city =?)");
            pst.setString(1, city);
            System.out.println(pst);
            rs = pst.executeUpdate();
            pst = con.prepareStatement("DELETE FROM `cab_service`.`cities` WHERE city =?");
            pst.setString(1, city);
            System.out.println(pst);
            rs = pst.executeUpdate();
            
            if (rs == 1) {
                JOptionPane.showMessageDialog(null, "City and is asosiated landmarks and roads are deleted!", "Success!!", JOptionPane.OK_OPTION);
                city_name_txt.setText("");
                update_lst();
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        update_lst();
        update_graph();
    }//GEN-LAST:event_dlt_city_cmdActionPerformed

    private void dl_cmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dl_cmdActionPerformed
        String to = to_cities_lst.getSelectedItem().toString();
        Connection con;
        PreparedStatement pst;
        int rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service", "root", "iitj_123");
            pst = con.prepareStatement("DELETE FROM `cab_service`.`map_roads` WHERE from_node =? AND to_node = ?");
            String frm = del_from_landm_lst.getSelectedItem().toString();
            String [] arr = frm.split(" ", 2);
            pst.setString(1, arr[0]);
            frm = del_to_landm_lst.getSelectedItem().toString();
            arr = frm.split(" ", 2);
            pst.setString(2, arr[0]);

            rs = pst.executeUpdate();
            if (rs == 1) {
                JOptionPane.showMessageDialog(null, "Road deleted!", "Success!!", JOptionPane.OK_OPTION);
                dist_spn.setValue("0");
            }
            con.close();

        } catch (Exception e) {
            System.out.println(e);
        }
        update_lst();
        update_graph();
    }//GEN-LAST:event_dl_cmdActionPerformed

    private void del_from_cities_lstItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_del_from_cities_lstItemStateChanged
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service","root","iitj_123");
            pst=con.prepareStatement("select * from map_nodes where city =(select city_id from cities where city =?)");
            pst.setString(1, del_from_cities_lst.getSelectedItem().toString());
            rs=pst.executeQuery();
            String item;
            del_from_landm_lst.removeAllItems();
            while(rs.next())
            {
                item = rs.getString("node_no") + " " +rs.getString("node_name");
                del_from_landm_lst.addItem(item);
            }
            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_del_from_cities_lstItemStateChanged

    private void del_from_cities_lstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_from_cities_lstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_del_from_cities_lstActionPerformed

    private void del_from_landm_lstItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_del_from_landm_lstItemStateChanged
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service","root","iitj_123");
            pst = con.prepareStatement("select * from `cab_service`.`map_nodes`,`cab_service`.`map_roads` where `map_roads`.`to_node` = node_no and `map_roads`.`from_node` = ?");
            String frm = del_from_landm_lst.getSelectedItem().toString();
            String [] arr = frm.split(" ", 2);
            pst.setString(1, arr[0]);

            rs=pst.executeQuery();
            String item;
            del_to_landm_lst.removeAllItems();
            while(rs.next())
            {
                item = rs.getString("node_name") + " " +rs.getString("node_name");
                del_to_landm_lst.addItem(item);
            }
            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }        
    }//GEN-LAST:event_del_from_landm_lstItemStateChanged

    private void del_cities_lstItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_del_cities_lstItemStateChanged
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service","root","iitj_123");
            pst=con.prepareStatement("select * from map_nodes where city =(select city_id from cities where city =?)");
            pst.setString(1, del_cities_lst.getSelectedItem().toString());
            rs=pst.executeQuery();
            String item;
            del_landm_lst.removeAllItems();
            while(rs.next())
            {
                item = rs.getString("node_no") + " " +rs.getString("node_name");
                del_landm_lst.addItem(item);
            }
            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_del_cities_lstItemStateChanged

    private void del_cities_lstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_cities_lstActionPerformed

    }//GEN-LAST:event_del_cities_lstActionPerformed

    private void del_landm_lstItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_del_landm_lstItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_del_landm_lstItemStateChanged

    private void dl_cmd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dl_cmd1ActionPerformed
        Connection con;
        PreparedStatement pst;
        int rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service", "root", "iitj_123");
            pst = con.prepareStatement("DELETE FROM `cab_service`.`map_nodes` WHERE node_no = ?");
            String frm = del_landm_lst.getSelectedItem().toString();
            String [] arr = frm.split(" ", 2);
            pst.setString(1, arr[0]);

            rs = pst.executeUpdate();
            if (rs == 1) {
                JOptionPane.showMessageDialog(null, "Landmark deleted!", "Success!!", JOptionPane.OK_OPTION);
                dist_spn.setValue("0");
            }
            con.close();

        } catch (Exception e) {
            System.out.println(e);
        }
        update_lst();
        update_graph();
    }//GEN-LAST:event_dl_cmd1ActionPerformed

    private void usr_name_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usr_name_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usr_name_txtActionPerformed

    private void usr_un_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usr_un_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usr_un_txtActionPerformed

    private void usr_pass_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usr_pass_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usr_pass_txtActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String ac;
        if (admin_chk.isSelected()) {
            ac = "admin";
        } else {
            ac = "user";
        }
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        int rs1;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service", "root", "iitj_123");
            pst = con.prepareStatement("INSERT INTO `cab_service`.`users` (`username`, `password`, `name`, `roll`) VALUES (?, ?, ?, ?);");
            pst.setString(1, usr_un_txt.getText());
            pst.setString(2, usr_pass_txt.getText());
            pst.setString(3, usr_name_txt.getText());
            pst.setString(4, ac);
            rs1 = pst.executeUpdate();
                        if (rs1 == 1) {
                JOptionPane.showMessageDialog(null, "user added!", "Success!!", JOptionPane.OK_OPTION);
            }
            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service","root","iitj_123");
            pst=con.prepareStatement("select * from `cab_service`.`cab_booking` where booking_id =? or email =?");
            pst.setString(1, bid_txt.getText());
            pst.setString(2, email.getText());
            rs=pst.executeQuery();
            rs.next();
            jLabel38.setText("Booking id : " +rs.getString("booking_id"));
            jLabel39.setText("From : " +rs.getString("from"));
            jLabel40.setText("to : " +rs.getString("to"));
            jLabel41.setText("At Time : " +rs.getString("start_time"));
            jLabel42.setText("distance : " +rs.getString("distance"));
            jLabel43.setText("Customer Name : " +rs.getString("customer_name"));
            jLabel44.setText("Mobile : " +rs.getString("mobile"));
            jLabel45.setText("Email : " +rs.getString("email"));
            jLabel46.setText("Address : " +rs.getString("address"));
            

            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new admin_home(true).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ac_opt;
    private javax.swing.JButton add_city_cmd;
    private javax.swing.JButton add_land_cmd;
    private javax.swing.JTextArea address_txt;
    private javax.swing.JCheckBox admin_chk;
    private javax.swing.JTextField avg_speed_txt;
    private javax.swing.JTextField bid_txt;
    private javax.swing.JRadioButton book_ac_opt;
    private javax.swing.JButton book_cab_cmd;
    private javax.swing.JComboBox book_from_city_lst;
    private javax.swing.JComboBox book_from_lm_lst;
    private javax.swing.JRadioButton book_nonac_opt;
    private javax.swing.JComboBox book_to_city_lst;
    private javax.swing.JComboBox book_to_lm_lst;
    private javax.swing.JComboBox capacity_lst;
    private javax.swing.JTextField capacity_txt;
    private javax.swing.JComboBox cities_lst;
    private javax.swing.JTextField city_name_txt;
    private javax.swing.JButton cl_cmd;
    private javax.swing.JTextField customer_name_txt;
    private javax.swing.JComboBox del_cities_lst;
    private javax.swing.JComboBox del_from_cities_lst;
    private javax.swing.JComboBox del_from_landm_lst;
    private javax.swing.JComboBox del_landm_lst;
    private javax.swing.JComboBox del_to_landm_lst;
    private javax.swing.JSpinner dep_time_spn;
    private javax.swing.JSpinner dist_spn;
    private javax.swing.JComboBox dl_cities_lst;
    private javax.swing.JButton dl_cmd;
    private javax.swing.JButton dl_cmd1;
    private javax.swing.JButton dlt_city_cmd;
    private javax.swing.JTextField email;
    private javax.swing.JTextField email_txt;
    private javax.swing.JComboBox from_cities_lst;
    private javax.swing.JComboBox from_landm_lst;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField landm_txt;
    private javax.swing.JTextField mobile_no_txt;
    private javax.swing.JTextField name_txt;
    private javax.swing.JTextField no_plate_txt;
    private javax.swing.JCheckBox one_way_chk;
    private javax.swing.JTextField reg_no_txt;
    private javax.swing.JSpinner ret_time_spn;
    private javax.swing.JCheckBox round_chk;
    private javax.swing.JComboBox to_cities_lst;
    private javax.swing.JComboBox to_landm_lst;
    private javax.swing.JComboBox type_book_lst;
    private javax.swing.JComboBox type_lst;
    private javax.swing.JTextField usr_name_txt;
    private javax.swing.JTextField usr_pass_txt;
    private javax.swing.JTextField usr_un_txt;
    // End of variables declaration//GEN-END:variables

    public void update_lst(){
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service","root","iitj_123");
            pst=con.prepareStatement("select * from cities");
            rs=pst.executeQuery();
            String item;
            cities_lst.removeAllItems();
            from_cities_lst.removeAllItems();
            to_cities_lst.removeAllItems();
            dl_cities_lst.removeAllItems();
            del_from_cities_lst.removeAllItems();
            del_cities_lst.removeAllItems();
            book_from_city_lst.removeAllItems();
            book_to_city_lst.removeAllItems();
            while(rs.next())
            {
                item = rs.getString("city");
                cities_lst.addItem(item);
                from_cities_lst.addItem(item);
                to_cities_lst.addItem(item);
                dl_cities_lst.addItem(item);
                del_cities_lst.addItem(item);
                del_from_cities_lst.addItem(item);
                book_from_city_lst.addItem(item);
                book_to_city_lst.addItem(item);
            }
            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    public void update_capacity(){
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service","root","iitj_123");
            pst=con.prepareStatement("SELECT DISTINCT(capacity) FROM `cab_service`.`cabs`");
            rs=pst.executeQuery();
            String item;
            capacity_lst.removeAllItems();
            while(rs.next())
            {
                item = rs.getString("capacity");
                capacity_lst.addItem(item);
            }
            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    public void update_graph(){
        Connection con;
        PreparedStatement pst;
        ResultSet rs,rs1;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab_service","root","iitj_123");
            pst=con.prepareStatement("SELECT MAX(node_no) FROM `cab_service`.`map_nodes`");
            rs=pst.executeQuery();
            rs.next();
            String item = rs.getString("MAX(node_no)");
            int sz = Integer.parseInt(item);
            vert = new Vertex[sz+1];
            pst=con.prepareStatement("SELECT * FROM `cab_service`.`map_nodes`");
            rs=pst.executeQuery();
            while(rs.next())
            {
                item = rs.getString("node_no");
                sz = Integer.parseInt(item);
                vert[sz] = new Vertex(rs.getString("node_name"));
                System.out.println(vert[sz]);
            }
            
            pst=con.prepareStatement("SELECT * FROM `cab_service`.`map_nodes`");
            rs=pst.executeQuery();
            while(rs.next())
            {
                item = rs.getString("node_no");
                sz = Integer.parseInt(item);
                pst=con.prepareStatement("SELECT * FROM `cab_service`.`map_roads` where from_node =?");
                pst.setString(1, item);
                rs1=pst.executeQuery();
                rs1.last();
                int dist,rsz = rs1.getRow();
                rs1.beforeFirst();
                vert[sz].adjacencies = new Edge[rsz];
                System.out.println("adj"+ vert[sz] + " "+ rsz);
                int i=0;
                while(rs1.next())
                {
                    item = rs1.getString("to_node");
                    rsz = Integer.parseInt(item);
                    item = rs1.getString("distance");
                    dist = Integer.parseInt(item);
                    vert[sz].adjacencies[i] = new Edge(vert[rsz],dist);
                    System.out.println(vert[sz].adjacencies[i].target+" wt " + vert[sz].adjacencies[i].weight);
                    i++;
                }
            }
            
            con.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    public DefaultTableModel map(ResultSet resultSet) throws SQLException
    {
        DefaultTableModel defaultTableModel = new DefaultTableModel();

        ResultSetMetaData meta = resultSet.getMetaData();
        int numberOfColumns = meta.getColumnCount();
        while (resultSet.next())
        {
            Object [] rowData = new Object[numberOfColumns];
            for (int i = 0; i < rowData.length; ++i)
            {
                rowData[i] = resultSet.getObject(i+1);
            }
            defaultTableModel.addRow(rowData);
        }

        return defaultTableModel;
    }
    
}

